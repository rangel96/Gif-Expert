{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoties","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","add","type","value","onChange","target","GifGridItem","props","url","title","className","src","alt","getGifs","search","a","encodeURI","fetch","resp","json","data","gifs","map","object","id","images","downsized_medium","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categoties","ReactDOM","render","document","getElementById"],"mappings":"6LAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEI,uBAAMC,SAZW,SAAEC,GAGnB,GAFAA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,EAE3B,OADAR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OAC9BN,EAAc,KAOzB,UACI,uBAAOO,KAAK,OAAOC,MAAQT,EAAaU,SAjBtB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,UAiBnB,mCAAMT,EAAN,W,QCXGY,EAZK,SAAAC,GAEhB,IAAQC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,MAEb,OACI,sBAAKC,UAAU,2CAAf,UACI,qBAAKC,IAAKH,EAAKI,IAAKH,IACpB,4BAAKA,Q,uBCTJI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACA,wCACVP,EAHa,UAEH,wCAFG,mBACH,mCADG,cAG8BQ,UAAUF,GAHxC,qBAIAG,MAAMT,GAJN,cAIbU,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,YAAK,CAC9BC,GAAID,EAAOC,GACXf,MAAOc,EAAOd,MACdD,IAAG,UAAEe,EAAOE,cAAT,aAAE,EAAeC,iBAAiBlB,QAVtB,kBAaZa,GAbY,4CAAH,sDC0BLM,EArBC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEf,ECHwB,SAACA,GACzB,MAA0BnC,mBAAU,CAChC2B,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAW,WACPnB,EAASe,GAAWK,MAAM,SAAAC,GAAI,OAC1BH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGlB,CAACD,IAEGE,EDZyBK,CAAaP,GAA/BM,EAAd,EAAQd,KAAYS,EAApB,EAAoBA,QAEpB,OACI,qCACI,kDAAsBD,EAAtB,OACEC,GAAW,mBAAGnB,UAAU,sBAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQwB,EAAKZ,KAAK,SAACc,GAAD,OACN,cAAC,EAAD,eAA+BA,GAAbA,EAAIZ,SAIhB,IAAhBU,EAAKlC,QAAgB,mBAAGU,UAAU,oCAAb,+BEmBpB2B,EAlCM,WAIjB,MAAqC5C,mBAAU,CAAC,gBAAhD,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ8C,EAAWhB,KAAK,SAAAM,GAAQ,OACpB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,YCpBvCW,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7c56d665.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategoties }) => {\r\n\r\n    const [inputValue, setInputValue,] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 1) {\r\n            setCategoties(add => [inputValue, ...add]);\r\n            return setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit }>\r\n            <input type=\"text\" value={ inputValue } onChange={ handleInputChange }  />\r\n            <h5> {inputValue} </h5>\r\n        </form>\r\n\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategoties: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = props => {\r\n\r\n    const { url, title } = props;\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__backInUp\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (search) => {\r\n    const api_key = 'YDoJRwmN8uHLFRfj9H61nGiYxANI6NeO';\r\n    const baseUrl = 'https://api.giphy.com/v1/gifs/search?';\r\n    const url = `${baseUrl}api_key=${ api_key }&q=${ encodeURI(search) }&lang=es`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( object => ({\r\n        id: object.id,\r\n        title: object.title,\r\n        url: object.images?.downsized_medium.url,\r\n    }));\r\n\r\n    return gifs;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: imgs, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> Resultados de: { category } </h3>\r\n            { loading && <p className=\"animate__rubberBand\">Loading...</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    imgs.map( (img) => (\r\n                        <GifGridItem key={img.id} { ...img } />\r\n                    ))\r\n                }\r\n            </div>\r\n            { imgs.length === 0 && <p className=\"animate__animated animate__shakeX\">Gif not found</p> }\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true,\r\n    } );\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then( imgs => (\r\n            setState({\r\n                data: imgs,\r\n                loading: false,\r\n            })\r\n        ));\r\n    }, [category] );\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    // const [categoties, setCategoties,] = useState( ['One Push', 'Samurai X', 'Dragon Ball'] );\r\n    const [categoties, setCategoties,] = useState( ['Dragon Ball'] );\r\n\r\n    // const handlers = () => {\r\n    //     // setCategoties([...categoties, 'Hunter x Hunter'])\r\n    //     setCategoties(cate => [...cate, 'Hunter x Hunter'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategoties={ setCategoties } />\r\n            <hr/>\r\n            {/*<button onClick={ handlers }>Agregar</button>*/}\r\n\r\n            <ol>\r\n                {\r\n                    categoties.map( category => (\r\n                        <GifGrid key={ category } category={ category } />\r\n                        // <li key={category} > { category } </li>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\n/*GifExpertApp.propTypes = {\r\n\r\n};*/\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}